import { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nasync function testCalculation() {\n  try {\n    // 创建测试账户\n    const account = await prisma.account.create({\n      data: {\n        name: \"测试账户\",\n        baseCurrency: \"CNY\",\n        initialBalance: \"1000\",\n        userId: \"test-user-id\" // 需要替换为实际用户ID\n      }\n    });\n    \n    console.log(\"账户创建成功:\", account);\n    \n    // 创建测试交易记录\n    const transactions = [\n      // 初始资金作为DEPOSIT交易已经在账户创建时处理\n      // 添加一些额外的存取款记录进行测试\n      await prisma.transaction.create({\n        data: {\n          accountId: account.id,\n          type: \"DEPOSIT\",\n          tradeDate: new Date(),\n          amount: \"500\",\n          currency: \"CNY\"\n        }\n      }),\n      await prisma.transaction.create({\n        data: {\n          accountId: account.id,\n          type: \"WITHDRAW\",\n          tradeDate: new Date(),\n          amount: \"200\",\n          currency: \"CNY\"\n        }\n      })\n    ];\n    \n    console.log(\"交易记录创建成功:\", transactions);\n    \n    // 创建测试快照记录\n    const snapshot = await prisma.valuationSnapshot.create({\n      data: {\n        accountId: account.id,\n        asOf: new Date(),\n        totalValue: \"1400\" // 当前估值\n      }\n    });\n    \n    console.log(\"快照记录创建成功:\", snapshot);\n    \n    // 计算逻辑验证\n    const initialBalance = Number(account.initialBalance || 0);\n    console.log(\"初始资金:\", initialBalance);\n    \n    // 获取所有交易记录\n    const allTransactions = await prisma.transaction.findMany({\n      where: { accountId: account.id },\n      orderBy: { tradeDate: \"asc\" }\n    });\n    \n    console.log(\"所有交易记录:\", allTransactions);\n    \n    // 计算净入金\n    let netContribution = initialBalance;\n    for (const tx of allTransactions) {\n      const amount = Number(tx.amount || 0);\n      if (tx.type === \"DEPOSIT\" || tx.type === \"TRANSFER_IN\") {\n        netContribution += amount;\n        console.log(`存款 ${amount}, 累计: ${netContribution}`);\n      } else if (tx.type === \"WITHDRAW\" || tx.type === \"TRANSFER_OUT\") {\n        netContribution -= amount;\n        console.log(`取款 ${amount}, 累计: ${netContribution}`);\n      }\n    }\n    \n    console.log(\"实际本金 (初始资金 + 存款 - 取款):\", netContribution);\n    \n    // 获取当前估值\n    const currentValue = Number(snapshot.totalValue || 0);\n    console.log(\"当前估值:\", currentValue);\n    \n    // 计算收益和收益率\n    const pnl = currentValue - netContribution;\n    const returnRate = netContribution !== 0 ? (pnl / netContribution) * 100 : 0;\n    \n    console.log(\"收益 (当前估值 - 实际本金):\", pnl);\n    console.log(\"收益率 (收益 / 实际本金):\", returnRate + \"%\");\n    \n    // 验证计算结果\n    console.log(\"\\n=== 计算结果验证 ===\");\n    console.log(\"初始资金: 1000\");\n    console.log(\"存款: 500\");\n    console.log(\"取款: 200\");\n    console.log(\"实际本金: 1000 + 500 - 200 = 1300\");\n    console.log(\"当前估值: 1400\");\n    console.log(\"收益: 1400 - 1300 = 100\");\n    console.log(\"收益率: 100 / 1300 = 7.69%\");\n    \n  } catch (error) {\n    console.error(\"测试错误:\", error);\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n\ntestCalculation();